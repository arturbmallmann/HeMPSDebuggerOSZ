package source;

import componentes.UJPanelImagem;
import java.awt.Color;
import java.awt.Cursor;
import java.text.DecimalFormat;
import javax.swing.SwingConstants;
import util.MPSoCConfig;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Marcelo
 */
public class Roteador extends javax.swing.JPanel {

    private int router_address;
    private MPSoCConfig mPSoCConfig;
    private MainFrame mainFrame;
    private int type;
    private boolean needReset;

    public Roteador(MainFrame mainFrame, int router_address, MPSoCConfig mPSoCConfig, int type) {
        this.mainFrame = mainFrame;
        this.router_address = router_address;
        this.mPSoCConfig = mPSoCConfig;
        this.type = type;
        this.needReset = true;
        initComponents();
        if (mPSoCConfig.getChannel_number() == 1){
            north_LOW_Label.setBounds(70, 0, 40, 20);
            in_north_LOW.setBounds(110, 0, 20, 30);
            out_north_LOW.setBounds(77, 0, 6, 30);
            
            east_LOW_Label.setBounds(90, 30, 40, 20);
            in_east_LOW.setBounds(160, 63, 33, 20);
            out_east_LOW.setBounds(160, 107, 30, 6);
            
            south_LOW_Label.setBounds(40, 110, 40, 20);
            in_south_LOW.setBounds(70, 160, 20, 30);
            out_south_LOW.setBounds(117, 160, 6, 30);
        
            weast_LOW_Label.setBounds(1, 70, 40, 20);
            in_weast_LOW.setBounds(0, 100, 30, 20);
            out_weast_LOW.setBounds(0, 70, 30, 6);
        }   
                
        router.setCursor(new Cursor(Cursor.HAND_CURSOR));
        if (mPSoCConfig.getRouterAddressing() == MPSoCConfig.HAMILTONIAN)
            routerLabel.setText(Integer.toString(this.router_address));
        else
            routerLabel.setText(this.mPSoCConfig.HamAdressToXYLabel(this.router_address));
        //removeCornersArrows();
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        router = new componentes.UJPanelImagem();
        routerLabel = new javax.swing.JLabel();
        north_HIGH_Label = new javax.swing.JLabel();
        south_HIGH_Label = new javax.swing.JLabel();
        south_LOW_Label = new javax.swing.JLabel();
        weast_LOW_Label = new javax.swing.JLabel();
        weast_HIGH_Label = new javax.swing.JLabel();
        north_LOW_Label = new javax.swing.JLabel();
        east_HIGH_Label = new javax.swing.JLabel();
        east_LOW_Label = new javax.swing.JLabel();
        out_north_HIGH = new componentes.UJPanelImagem();
        in_north_HIGH = new componentes.UJPanelImagem();
        out_weast_HIGH = new componentes.UJPanelImagem();
        in_weast_HIGH = new componentes.UJPanelImagem();
        in_east_LOW = new componentes.UJPanelImagem();
        out_east_LOW = new componentes.UJPanelImagem();
        in_south_LOW = new componentes.UJPanelImagem();
        out_south_LOW = new componentes.UJPanelImagem();
        in_south_HIGH = new componentes.UJPanelImagem();
        out_south_HIGH = new componentes.UJPanelImagem();
        out_weast_LOW = new componentes.UJPanelImagem();
        in_weast_LOW = new componentes.UJPanelImagem();
        in_east_HIGH = new componentes.UJPanelImagem();
        out_east_HIGH = new componentes.UJPanelImagem();
        out_north_LOW = new componentes.UJPanelImagem();
        in_north_LOW = new componentes.UJPanelImagem();
        local_out = new componentes.UJPanelImagem();
        local_Label = new javax.swing.JLabel();
        local_in = new componentes.UJPanelImagem();

        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(170, 170));
        setMinimumSize(new java.awt.Dimension(170, 170));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(170, 170));
        setLayout(null);

        router.setMinimumSize(new java.awt.Dimension(300, 300));
        router.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                routerMouseReleased(evt);
            }
        });
        router.setLayout(null);

        routerLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        routerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        routerLabel.setHorizontalTextPosition(SwingConstants.CENTER);
        router.add(routerLabel);
        routerLabel.setBounds(40, 50, 50, 30);

        north_HIGH_Label.setFont(new java.awt.Font("Andale Mono", 0, 10)); // NOI18N
        north_HIGH_Label.setText("00.00%");
        if(mPSoCConfig.getChannel_number() == 2){
            router.add(north_HIGH_Label);
            north_HIGH_Label.setBounds(90, 0, 40, 20);
        }

        south_HIGH_Label.setFont(new java.awt.Font("Andale Mono", 0, 10)); // NOI18N
        south_HIGH_Label.setText("00.00%");
        if(mPSoCConfig.getChannel_number() == 2){
            router.add(south_HIGH_Label);
            south_HIGH_Label.setBounds(82, 110, 40, 20);
        }

        south_LOW_Label.setFont(new java.awt.Font("Andale Mono", 0, 10)); // NOI18N
        south_LOW_Label.setText("00.00%");
        router.add(south_LOW_Label);
        south_LOW_Label.setBounds(20, 110, 36, 20);

        weast_LOW_Label.setFont(new java.awt.Font("Andale Mono", 0, 10)); // NOI18N
        weast_LOW_Label.setText("00.00%");
        router.add(weast_LOW_Label);
        weast_LOW_Label.setBounds(1, 70, 40, 20);

        weast_HIGH_Label.setFont(new java.awt.Font("Andale Mono", 0, 10)); // NOI18N
        weast_HIGH_Label.setText("00.00%");
        if(mPSoCConfig.getChannel_number() == 2){
            router.add(weast_HIGH_Label);
            weast_HIGH_Label.setBounds(1, 20, 40, 20);
        }

        north_LOW_Label.setFont(new java.awt.Font("Andale Mono", 0, 10)); // NOI18N
        north_LOW_Label.setText("00.00%");
        router.add(north_LOW_Label);
        north_LOW_Label.setBounds(40, 0, 40, 20);

        east_HIGH_Label.setFont(new java.awt.Font("Andale Mono", 0, 10)); // NOI18N
        east_HIGH_Label.setText("00.00%");
        if(mPSoCConfig.getChannel_number() == 2){
            router.add(east_HIGH_Label);
            east_HIGH_Label.setBounds(90, 40, 40, 20);
        }

        east_LOW_Label.setFont(new java.awt.Font("Andale Mono", 0, 10)); // NOI18N
        east_LOW_Label.setText("00.00%");
        router.add(east_LOW_Label);
        east_LOW_Label.setBounds(90, 90, 40, 20);

        add(router);
        router.setBounds(30, 30, 130, 130);

        javax.swing.GroupLayout out_north_HIGHLayout = new javax.swing.GroupLayout(out_north_HIGH);
        out_north_HIGH.setLayout(out_north_HIGHLayout);
        out_north_HIGHLayout.setHorizontalGroup(
            out_north_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );
        out_north_HIGHLayout.setVerticalGroup(
            out_north_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        if(mPSoCConfig.getChannel_number() == 2){

            add(out_north_HIGH);
            out_north_HIGH.setBounds(115, 0, 6, 30);
        }

        javax.swing.GroupLayout in_north_HIGHLayout = new javax.swing.GroupLayout(in_north_HIGH);
        in_north_HIGH.setLayout(in_north_HIGHLayout);
        in_north_HIGHLayout.setHorizontalGroup(
            in_north_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        in_north_HIGHLayout.setVerticalGroup(
            in_north_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        if(mPSoCConfig.getChannel_number() == 2){

            add(in_north_HIGH);
            in_north_HIGH.setBounds(124, 0, 20, 30);
        }

        javax.swing.GroupLayout out_weast_HIGHLayout = new javax.swing.GroupLayout(out_weast_HIGH);
        out_weast_HIGH.setLayout(out_weast_HIGHLayout);
        out_weast_HIGHLayout.setHorizontalGroup(
            out_weast_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        out_weast_HIGHLayout.setVerticalGroup(
            out_weast_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );

        if(mPSoCConfig.getChannel_number() == 2){

            add(out_weast_HIGH);
            out_weast_HIGH.setBounds(0, 77, 30, 6);
        }

        javax.swing.GroupLayout in_weast_HIGHLayout = new javax.swing.GroupLayout(in_weast_HIGH);
        in_weast_HIGH.setLayout(in_weast_HIGHLayout);
        in_weast_HIGHLayout.setHorizontalGroup(
            in_weast_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        in_weast_HIGHLayout.setVerticalGroup(
            in_weast_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        if(mPSoCConfig.getChannel_number() == 2){

            add(in_weast_HIGH);
            in_weast_HIGH.setBounds(0, 53, 30, 20);
        }

        javax.swing.GroupLayout in_east_LOWLayout = new javax.swing.GroupLayout(in_east_LOW);
        in_east_LOW.setLayout(in_east_LOWLayout);
        in_east_LOWLayout.setHorizontalGroup(
            in_east_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );
        in_east_LOWLayout.setVerticalGroup(
            in_east_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        add(in_east_LOW);
        in_east_LOW.setBounds(160, 120, 33, 20);

        javax.swing.GroupLayout out_east_LOWLayout = new javax.swing.GroupLayout(out_east_LOW);
        out_east_LOW.setLayout(out_east_LOWLayout);
        out_east_LOWLayout.setHorizontalGroup(
            out_east_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );
        out_east_LOWLayout.setVerticalGroup(
            out_east_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );

        add(out_east_LOW);
        out_east_LOW.setBounds(160, 110, 33, 6);

        javax.swing.GroupLayout in_south_LOWLayout = new javax.swing.GroupLayout(in_south_LOW);
        in_south_LOW.setLayout(in_south_LOWLayout);
        in_south_LOWLayout.setHorizontalGroup(
            in_south_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        in_south_LOWLayout.setVerticalGroup(
            in_south_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        add(in_south_LOW);
        in_south_LOW.setBounds(50, 160, 20, 30);

        javax.swing.GroupLayout out_south_LOWLayout = new javax.swing.GroupLayout(out_south_LOW);
        out_south_LOW.setLayout(out_south_LOWLayout);
        out_south_LOWLayout.setHorizontalGroup(
            out_south_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );
        out_south_LOWLayout.setVerticalGroup(
            out_south_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        add(out_south_LOW);
        out_south_LOW.setBounds(72, 160, 6, 30);

        javax.swing.GroupLayout in_south_HIGHLayout = new javax.swing.GroupLayout(in_south_HIGH);
        in_south_HIGH.setLayout(in_south_HIGHLayout);
        in_south_HIGHLayout.setHorizontalGroup(
            in_south_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        in_south_HIGHLayout.setVerticalGroup(
            in_south_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        if(mPSoCConfig.getChannel_number() == 2){

            add(in_south_HIGH);
            in_south_HIGH.setBounds(108, 160, 20, 30);
        }

        javax.swing.GroupLayout out_south_HIGHLayout = new javax.swing.GroupLayout(out_south_HIGH);
        out_south_HIGH.setLayout(out_south_HIGHLayout);
        out_south_HIGHLayout.setHorizontalGroup(
            out_south_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );
        out_south_HIGHLayout.setVerticalGroup(
            out_south_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        if(mPSoCConfig.getChannel_number() == 2){

            add(out_south_HIGH);
            out_south_HIGH.setBounds(131, 160, 6, 30);
        }

        javax.swing.GroupLayout out_weast_LOWLayout = new javax.swing.GroupLayout(out_weast_LOW);
        out_weast_LOW.setLayout(out_weast_LOWLayout);
        out_weast_LOWLayout.setHorizontalGroup(
            out_weast_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        out_weast_LOWLayout.setVerticalGroup(
            out_weast_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );

        add(out_weast_LOW);
        out_weast_LOW.setBounds(0, 127, 30, 6);

        javax.swing.GroupLayout in_weast_LOWLayout = new javax.swing.GroupLayout(in_weast_LOW);
        in_weast_LOW.setLayout(in_weast_LOWLayout);
        in_weast_LOWLayout.setHorizontalGroup(
            in_weast_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        in_weast_LOWLayout.setVerticalGroup(
            in_weast_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        add(in_weast_LOW);
        in_weast_LOW.setBounds(0, 103, 30, 20);

        javax.swing.GroupLayout in_east_HIGHLayout = new javax.swing.GroupLayout(in_east_HIGH);
        in_east_HIGH.setLayout(in_east_HIGHLayout);
        in_east_HIGHLayout.setHorizontalGroup(
            in_east_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        in_east_HIGHLayout.setVerticalGroup(
            in_east_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        if(mPSoCConfig.getChannel_number() == 2){

            add(in_east_HIGH);
            in_east_HIGH.setBounds(160, 70, 20, 20);
        }

        javax.swing.GroupLayout out_east_HIGHLayout = new javax.swing.GroupLayout(out_east_HIGH);
        out_east_HIGH.setLayout(out_east_HIGHLayout);
        out_east_HIGHLayout.setHorizontalGroup(
            out_east_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );
        out_east_HIGHLayout.setVerticalGroup(
            out_east_HIGHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );

        if(mPSoCConfig.getChannel_number() == 2){

            add(out_east_HIGH);
            out_east_HIGH.setBounds(160, 60, 33, 6);
        }

        javax.swing.GroupLayout out_north_LOWLayout = new javax.swing.GroupLayout(out_north_LOW);
        out_north_LOW.setLayout(out_north_LOWLayout);
        out_north_LOWLayout.setHorizontalGroup(
            out_north_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );
        out_north_LOWLayout.setVerticalGroup(
            out_north_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        add(out_north_LOW);
        out_north_LOW.setBounds(57, 0, 6, 30);

        javax.swing.GroupLayout in_north_LOWLayout = new javax.swing.GroupLayout(in_north_LOW);
        in_north_LOW.setLayout(in_north_LOWLayout);
        in_north_LOWLayout.setHorizontalGroup(
            in_north_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        in_north_LOWLayout.setVerticalGroup(
            in_north_LOWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        add(in_north_LOW);
        in_north_LOW.setBounds(65, 0, 20, 30);

        javax.swing.GroupLayout local_outLayout = new javax.swing.GroupLayout(local_out);
        local_out.setLayout(local_outLayout);
        local_outLayout.setHorizontalGroup(
            local_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        local_outLayout.setVerticalGroup(
            local_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        add(local_out);
        local_out.setBounds(0, 20, 20, 20);

        local_Label.setFont(new java.awt.Font("Andale Mono", 0, 10)); // NOI18N
        local_Label.setText("00.00%");
        add(local_Label);
        local_Label.setBounds(20, 18, 40, 13);

        javax.swing.GroupLayout local_inLayout = new javax.swing.GroupLayout(local_in);
        local_in.setLayout(local_inLayout);
        local_inLayout.setHorizontalGroup(
            local_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        local_inLayout.setVerticalGroup(
            local_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        add(local_in);
        local_in.setBounds(0, 0, 20, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void routerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_routerMouseReleased
        mainFrame.routerClicked(router_address);
    }//GEN-LAST:event_routerMouseReleased

    public void updateThroughput(int port, float value){
        
        if (value >= 100) value = 99.99f;
        
        String text = new DecimalFormat("00.00").format((float)value);
        text+="%";
        
        switch (port) {
            case MPSoCConfig.EAST0:
                east_HIGH_Label.setText(text);
                break;
            case MPSoCConfig.EAST1:
                east_LOW_Label.setText(text);
                break;
            case MPSoCConfig.NORTH0:
                north_HIGH_Label.setText(text);
                break;
            case MPSoCConfig.NORTH1:
                north_LOW_Label.setText(text);
                break;
            case MPSoCConfig.WEST0:
                weast_HIGH_Label.setText(text);
                break;
            case MPSoCConfig.WEST1:
                weast_LOW_Label.setText(text);
                break;
            case MPSoCConfig.SOUTH0:
                south_HIGH_Label.setText(text);
                break;
            case MPSoCConfig.SOUTH1:
                south_LOW_Label.setText(text);
                break;
            case MPSoCConfig.LOCAL0:
                local_Label.setText(text);
                break;
            case MPSoCConfig.LOCAL1:
                local_Label.setText(text);
                break;
        }
        
    }
    
    public void resetArrows() {

        int x_dimension = mPSoCConfig.getX_dimension();
        int y_dimension = mPSoCConfig.getY_dimension();
        
        RouterNeighbors rn = new RouterNeighbors(x_dimension, y_dimension);
        
        needReset = false;
        
        switch(type){
            case MPSoCConfig.SLAVE:
                router.setImagem("/images/Router.png");
                break;
            case MPSoCConfig.CLUSTER_MASTER:
                router.setImagem("/images/Router_cluster_master.png");
                break;
            case MPSoCConfig.GLOBAL_MASTER:
                router.setImagem("/images/Router_master.png");
                break;
        }
         router.repaint();
            
        local_in.setImagem("/images/local_in.png");
        local_in.repaint();
        local_out.setImagem("/images/local_out.png");
        local_out.repaint();

        if (rn.getXCoordinate(router_address) != 0) {//apagar esquerda
           
            out_weast_HIGH.setImagem("/images/undirected_h.png");
            out_weast_HIGH.repaint();
            in_weast_HIGH.setImagem("/images/right.png");
            in_weast_HIGH.repaint();
            out_weast_LOW.setImagem("/images/undirected_h.png");
            out_weast_LOW.repaint();
            in_weast_LOW.setImagem("/images/right.png");
            in_weast_LOW.repaint();
            
        }
        if (rn.getXCoordinate(router_address) != x_dimension - 1) {//apagar direita
            in_east_LOW.setImagem("/images/left.png");
            in_east_LOW.repaint();
            out_east_LOW.setImagem("/images/undirected_h.png");
            out_east_LOW.repaint();
            in_east_HIGH.setImagem("/images/left.png");
            in_east_HIGH.repaint();
            out_east_HIGH.setImagem("/images/undirected_h.png");
            out_east_HIGH.repaint();
        }
        if (rn.getYCoordinate(router_address) != 0) { //apagar baixo
            
            in_south_LOW.setImagem("/images/up.png");
            in_south_LOW.repaint();
            out_south_LOW.setImagem("/images/undirected_v.png");
            out_south_LOW.repaint();
            in_south_HIGH.setImagem("/images/up.png");
            in_south_HIGH.repaint();
            out_south_HIGH.setImagem("/images/undirected_v.png");
            out_south_HIGH.repaint();
        }
        if (rn.getYCoordinate(router_address) != y_dimension - 1) { //apagar cima
            out_north_HIGH.setImagem("/images/undirected_v.png");
            out_north_HIGH.repaint();
            in_north_HIGH.setImagem("/images/down.png");
            in_north_HIGH.repaint();
            out_north_LOW.setImagem("/images/undirected_v.png");
            out_north_LOW.repaint();
            in_north_LOW.setImagem("/images/down.png");
            in_north_LOW.repaint();
        }



    }

    public void paintArrow(int arrow) {

        UJPanelImagem panel = null;

        needReset = true;
        
        switch (arrow) {
            case MPSoCConfig.EAST_IN_HIGH:
                panel = in_east_HIGH;
                panel.setImagem("/images/red_left.png");
                break;
            case MPSoCConfig.EAST_OUT_HIGH:
                panel = out_east_HIGH;
                panel.setImagem("/images/red_undirected_h.png");
                break;
            case MPSoCConfig.EAST_IN_LOW:
                panel = in_east_LOW;
                panel.setImagem("/images/red_left.png");
                break;
            case MPSoCConfig.EAST_OUT_LOW:
                panel = out_east_LOW;
                panel.setImagem("/images/red_undirected_h.png");
                break;
            case MPSoCConfig.NORTH_IN_HIGH:
                panel = in_north_HIGH;
                panel.setImagem("/images/red_down.png");
                break;
            case MPSoCConfig.NORTH_IN_LOW:
                panel = in_north_LOW;
                panel.setImagem("/images/red_down.png");
                break;
            case MPSoCConfig.NORTH_OUT_HIGH:
                panel = out_north_HIGH;
                panel.setImagem("/images/red_undirected_v.png");
                break;
            case MPSoCConfig.NORTH_OUT_LOW:
                panel = out_north_LOW;
                panel.setImagem("/images/red_undirected_v.png");
                break;
            case MPSoCConfig.WEAST_IN_HIGH:
                panel = in_weast_HIGH;
                panel.setImagem("/images/red_right.png");
                break;
            case MPSoCConfig.WEAST_IN_LOW:
                panel = in_weast_LOW;
                panel.setImagem("/images/red_right.png");
                break;
            case MPSoCConfig.WEAST_OUT_HIGH:
                panel = out_weast_HIGH;
                panel.setImagem("/images/red_undirected_h.png");
                break;
            case MPSoCConfig.WEAST_OUT_LOW:
                panel = out_weast_LOW;
                panel.setImagem("/images/red_undirected_h.png");
                break;
            case MPSoCConfig.SOUTH_IN_HIGH:
                panel = in_south_HIGH;
                panel.setImagem("/images/red_up.png");
                break;
            case MPSoCConfig.SOUTH_IN_LOW:
                panel = in_south_LOW;
                panel.setImagem("/images/red_up.png");
                break;
            case MPSoCConfig.SOUTH_OUT_HIGH:
                panel = out_south_HIGH;
                panel.setImagem("/images/red_undirected_v.png");
                break;
            case MPSoCConfig.SOUTH_OUT_LOW:
                panel = out_south_LOW;
                panel.setImagem("/images/red_undirected_v.png");
                break;
            case MPSoCConfig.LOCAL_IN:
                panel = local_in;
                panel.setImagem("/images/red_local_in.png");
                break;
            case MPSoCConfig.LOCAL_OUT:
                panel = local_out;
                panel.setImagem("/images/red_local_out.png");
                break;
            default:
                needReset = false;
                break;
        }

        panel.repaint();

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel east_HIGH_Label;
    private javax.swing.JLabel east_LOW_Label;
    private componentes.UJPanelImagem in_east_HIGH;
    private componentes.UJPanelImagem in_east_LOW;
    private componentes.UJPanelImagem in_north_HIGH;
    private componentes.UJPanelImagem in_north_LOW;
    private componentes.UJPanelImagem in_south_HIGH;
    private componentes.UJPanelImagem in_south_LOW;
    private componentes.UJPanelImagem in_weast_HIGH;
    private componentes.UJPanelImagem in_weast_LOW;
    private javax.swing.JLabel local_Label;
    private componentes.UJPanelImagem local_in;
    private componentes.UJPanelImagem local_out;
    private javax.swing.JLabel north_HIGH_Label;
    private javax.swing.JLabel north_LOW_Label;
    private componentes.UJPanelImagem out_east_HIGH;
    private componentes.UJPanelImagem out_east_LOW;
    private componentes.UJPanelImagem out_north_HIGH;
    private componentes.UJPanelImagem out_north_LOW;
    private componentes.UJPanelImagem out_south_HIGH;
    private componentes.UJPanelImagem out_south_LOW;
    private componentes.UJPanelImagem out_weast_HIGH;
    private componentes.UJPanelImagem out_weast_LOW;
    private componentes.UJPanelImagem router;
    private javax.swing.JLabel routerLabel;
    private javax.swing.JLabel south_HIGH_Label;
    private javax.swing.JLabel south_LOW_Label;
    private javax.swing.JLabel weast_HIGH_Label;
    private javax.swing.JLabel weast_LOW_Label;
    // End of variables declaration//GEN-END:variables

    public int getRouter_address() {
        return router_address;
    }

    public boolean isNeedReset() {
        return needReset;
    }
}
